{"version":3,"sources":["webpack:///./src/components/IndexActionButton.module.css","webpack:///./src/components/IndexActionButton.js","webpack:///./src/pages/index.js","webpack:///./src/styles/index.module.css"],"names":["module","exports","IndexActionButton","children","href","to","className","styles","rootButton","ProductSquare","title","description","url","logo","isNew","productSquare","productSquareContent","style","display","alignItems","backgroundImage","productSquareLogo","marginBottom","marginLeft","margin","position","bottom","right","NewTag","borderRadius","backgroundColor","color","fontSize","padding","IndexPage","products","data","site","siteMetadata","useState","update","setUpdate","mainBar","useRef","leftCanvasContainer","rightCanvasContainer","centerContainer","leftCanvas","rightCanvas","useEffect","drawPattern","canvas","c","rectSize","rectValues","left","clearRect","width","height","x","y","xNorm","yNorm","prob","Math","exp","pow","diffuse","undefined","random","rv","gt","bt","fillStyle","fillRect","current","window","innerWidth","getBoundingClientRect","leftC","getContext","rightC","handleResize","addEventListener","removeEventListener","ref","flexGrow","textAlign","flexDirection","justifyContent","aboutContainer","id","productsContainer","productsGrid","map","product","key","query"],"mappings":"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","file":"component---src-pages-index-js-31fdeca1c0cbe1ab7477.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootButton\":\"IndexActionButton-module--rootButton--3HfPl\"};","import React from 'react';\r\nimport styles from './IndexActionButton.module.css';\r\nimport { Link } from 'gatsby';\r\n\r\nconst IndexActionButton = ({ children, href }) => (\r\n  <Link to={href} className={styles.rootButton}>\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nexport default IndexActionButton;","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport styles from '../styles/index.module.css'\r\nimport IndexActionButton from '../components/IndexActionButton';\r\nimport { graphql } from 'gatsby';\r\n\r\n\r\nconst ProductSquare = ({ title, description, url, logo, isNew }) => (\r\n  <div className={styles.productSquare}>\r\n    <div className={styles.productSquareContent}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        { logo && <div style={{ backgroundImage: 'url(\"' +logo + '\")'}} className={styles.productSquareLogo}/> }\r\n        <h1 style={{ marginBottom: '15px' }}>{title}</h1>\r\n        { isNew && <><div style={{ marginLeft: '12px' }}/><NewTag/></> }\r\n      </div>\r\n      <div style={{ margin: '0 3px' }}>\r\n        <p>\r\n          {description}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div style={{ position: 'absolute', bottom: '30px', right: '20px' }}>\r\n      <IndexActionButton href={url}>Go &gt;</IndexActionButton>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nconst NewTag = () => (\r\n  <span style={{ borderRadius: '20px', backgroundColor: 'red', color: 'white', fontSize: '14pt', padding: '5px' }}>\r\n    New\r\n  </span>\r\n);\r\n\r\n\r\nfunction IndexPage({ data }) {\r\n  const products = data.site.siteMetadata.products;\r\n\r\n  const [update, setUpdate] = useState(0);\r\n  const [rectValuesLeft, setRectValuesLeft] = useState({});\r\n  const [rectValuesRight, setRectValuesRight] = useState({});\r\n  \r\n  const mainBar = useRef()\r\n  const leftCanvasContainer = useRef();\r\n  const rightCanvasContainer = useRef();\r\n  const centerContainer = useRef();\r\n  const leftCanvas = useRef();\r\n  const rightCanvas = useRef();\r\n  useEffect(() => {\r\n    function resizeCanvas() {\r\n      if(leftCanvas.current.width === 0) {\r\n        leftCanvas.current.width = (window.innerWidth - centerContainer.current.getBoundingClientRect().width) / 2;\r\n        rightCanvas.current.width = (window.innerWidth - centerContainer.current.getBoundingClientRect().width) / 2;\r\n        leftCanvas.current.height = mainBar.current.getBoundingClientRect().height;\r\n        rightCanvas.current.height = mainBar.current.getBoundingClientRect().height;\r\n      }\r\n    }\r\n    resizeCanvas();\r\n    \r\n    function drawPattern(canvas, c, rectSize, rectValues, left=true) {\r\n      const r = 255;\r\n      const g = 100;\r\n      const b = 13;\r\n      \r\n      c.clearRect(0, 0, canvas.width, canvas.height);\r\n      for (let x = 0; x < canvas.width / rectSize; x++) {\r\n        for (let y = 0; y < canvas.height / rectSize; y++) {\r\n          const xNorm = x / (canvas.width / rectSize);\r\n          const yNorm = y / (canvas.height / rectSize);\r\n          \r\n          let prob = 0.0;\r\n          const diffuse = 4;\r\n          if(left) {\r\n            prob = (xNorm - 1) + Math.exp(-Math.pow(yNorm * diffuse - (diffuse / 2), 2));\r\n          }\r\n          else {\r\n            prob = -xNorm + Math.exp(-Math.pow(yNorm * diffuse - (diffuse / 2), 2));\r\n          }\r\n          \r\n          if (rectValues[x + ' ' + y] === undefined) rectValues[x + ' ' + y] = Math.random() < prob ? prob : 0;\r\n          const rv = rectValues[x + ' ' + y];\r\n          if (rv > 0) {\r\n            const rt = r;\r\n            const gt = g + (255 - g) * (1 - rv);\r\n            const bt = b + (255 - b) * (1 - rv);\r\n            c.fillStyle = 'rgb(' + rt + ',' + gt + ',' + bt + ')';\r\n            c.fillRect(x * rectSize + (left ? canvas.width % rectSize : 0), y * rectSize, rectSize, rectSize);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    const leftC = leftCanvas.current.getContext('2d');\r\n    const rightC = rightCanvas.current.getContext('2d');\r\n    \r\n    const rv = {};\r\n    const rectSize = 15;\r\n    drawPattern(leftCanvas.current, leftC, rectSize, {});\r\n    drawPattern(rightCanvas.current, rightC, rectSize, {}, false);\r\n  \r\n  \r\n    function handleResize() {\r\n      leftCanvas.current.width = 0;\r\n      rightCanvas.current.width = 0;\r\n      leftCanvas.current.height = 0;\r\n      rightCanvas.current.height = 0;\r\n      setUpdate(update + 1);\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    }\r\n  });\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\"/>\r\n      <div ref={mainBar} className={styles.mainBar}>\r\n        <div ref={leftCanvasContainer} style={{ flexGrow: 10 }}>\r\n          <canvas ref={leftCanvas} width={'0'}> </canvas>\r\n        </div>\r\n        <div ref={centerContainer} style={{ flexGrow: 1, height: '400px', textAlign: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n          <h1 style={{ marginBottom: '15px' }}>Software for the future</h1>\r\n          <IndexActionButton href={'#products'}>See our products > </IndexActionButton>\r\n        </div>\r\n        <div ref={rightCanvasContainer} style={{ flexGrow: 10 }}>\r\n          <canvas ref={rightCanvas} width={'0'}> </canvas>\r\n        </div>\r\n      </div>\r\n      <div className={styles.aboutContainer} id={'about'}>\r\n        <h3>About Us</h3>\r\n        <div>\r\n          <p>\r\n            We are devoted to building software that makes the people's lives easier. Our main goal in developing\r\n            Dataflow was to streamline development reducing redundant efforts. Likewise, our goal in developing\r\n            Prism academy was to help people with a passion reach their goals.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.productsContainer} id={'products'}>\r\n        <h3>Products</h3>\r\n        <div className={styles.productsGrid}>\r\n          {\r\n            products.map((product, key) => (\r\n              <ProductSquare\r\n                key={key}\r\n                title={product.title}\r\n                description={product.description}\r\n                url={product.url}\r\n                logo={product.logo}\r\n                isNew={product.isNew}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n  query IndexQuery {\r\n    site {\r\n      siteMetadata {\r\n        products {\r\n          title,\r\n          description,\r\n          url,\r\n          logo,\r\n          isNew\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBar\":\"index-module--mainBar--2YpVc\",\"aboutContainer\":\"index-module--aboutContainer--1KOgA\",\"productsContainer\":\"index-module--productsContainer--kDe1b\",\"productsGrid\":\"index-module--productsGrid--3zKSt\",\"productSquare\":\"index-module--productSquare--20hRu\",\"productSquareContent\":\"index-module--productSquareContent--2FKL3\",\"productSquareLogo\":\"index-module--productSquareLogo--QHsTt\"};"],"sourceRoot":""}